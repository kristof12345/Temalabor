// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(FlightContext))]
    [Migration("20180923150822_CreateFlightDB")]
    partial class CreateFlightDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Flight", b =>
                {
                    b.Property<int>("flightID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date");

                    b.Property<string>("departure");

                    b.Property<string>("destination");

                    b.HasKey("flightID");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("DAL.Seat", b =>
                {
                    b.Property<int>("seatID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsReserved");

                    b.Property<int?>("flightID");

                    b.HasKey("seatID");

                    b.HasIndex("flightID");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("DAL.Seat", b =>
                {
                    b.HasOne("DAL.Flight")
                        .WithMany("seats")
                        .HasForeignKey("flightID");
                });
#pragma warning restore 612, 618
        }
    }
}
